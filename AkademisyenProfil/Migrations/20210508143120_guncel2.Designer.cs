// <auto-generated />
using AkademisyenProfil.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AkademisyenProfil.Migrations
{
    [DbContext(typeof(context))]
    [Migration("20210508143120_guncel2")]
    partial class guncel2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AkademisyenProfil.Models.Akademisyenler", b =>
                {
                    b.Property<int>("akano")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("akaad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("akaemail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("akafoto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("akatel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("akaunvan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("bolumno")
                        .HasColumnType("int");

                    b.HasKey("akano");

                    b.HasIndex("bolumno");

                    b.ToTable("akademisyenlers");
                });

            modelBuilder.Entity("AkademisyenProfil.Models.Bildiriler", b =>
                {
                    b.Property<int>("bildirino")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("akano")
                        .HasColumnType("int");

                    b.Property<string>("ulusal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("uluslararası")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("bildirino");

                    b.HasIndex("akano");

                    b.ToTable("bildirilers");
                });

            modelBuilder.Entity("AkademisyenProfil.Models.Bolumler", b =>
                {
                    b.Property<int>("bolumno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("bollogo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bolumad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("fakulteno")
                        .HasColumnType("int");

                    b.HasKey("bolumno");

                    b.HasIndex("fakulteno");

                    b.ToTable("bolumlers");
                });

            modelBuilder.Entity("AkademisyenProfil.Models.Fakulteler", b =>
                {
                    b.Property<int>("fakulteno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("fakultead")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fakultelogo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("fakulteno");

                    b.ToTable("fakultelers");
                });

            modelBuilder.Entity("AkademisyenProfil.Models.Gorevler", b =>
                {
                    b.Property<int>("gorevno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("akano")
                        .HasColumnType("int");

                    b.Property<string>("gorevad")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("gorevno");

                    b.HasIndex("akano");

                    b.ToTable("gorevlers");
                });

            modelBuilder.Entity("AkademisyenProfil.Models.Hakemlikler", b =>
                {
                    b.Property<int>("hakemno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("akano")
                        .HasColumnType("int");

                    b.Property<string>("hakemad")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("hakemno");

                    b.HasIndex("akano");

                    b.ToTable("hakemliklers");
                });

            modelBuilder.Entity("AkademisyenProfil.Models.Kitaplar", b =>
                {
                    b.Property<int>("kitapno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("akano")
                        .HasColumnType("int");

                    b.Property<string>("kitapad")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("kitapno");

                    b.HasIndex("akano");

                    b.ToTable("kitaplars");
                });

            modelBuilder.Entity("AkademisyenProfil.Models.Makaleler", b =>
                {
                    b.Property<int>("makaleno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("akano")
                        .HasColumnType("int");

                    b.Property<string>("makalead")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("makaleno");

                    b.HasIndex("akano");

                    b.ToTable("makalelers");
                });

            modelBuilder.Entity("AkademisyenProfil.Models.Oduller", b =>
                {
                    b.Property<int>("odulno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("akano")
                        .HasColumnType("int");

                    b.Property<string>("odulad")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("odulno");

                    b.HasIndex("akano");

                    b.ToTable("odullers");
                });

            modelBuilder.Entity("AkademisyenProfil.Models.Ogrenimbilgiler", b =>
                {
                    b.Property<int>("ogrenimno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("akano")
                        .HasColumnType("int");

                    b.Property<string>("arastirmaalan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("doktora")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lisans")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("yukseklisans")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ogrenimno");

                    b.HasIndex("akano");

                    b.ToTable("ogrenimbilgilers");
                });

            modelBuilder.Entity("AkademisyenProfil.Models.Projeler", b =>
                {
                    b.Property<int>("projeno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Projead")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("akano")
                        .HasColumnType("int");

                    b.HasKey("projeno");

                    b.HasIndex("akano");

                    b.ToTable("projelers");
                });

            modelBuilder.Entity("AkademisyenProfil.Models.Sertifikalar", b =>
                {
                    b.Property<int>("sertifakano")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("akano")
                        .HasColumnType("int");

                    b.Property<string>("sertifikaad")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("sertifakano");

                    b.HasIndex("akano");

                    b.ToTable("sertifikalars");
                });

            modelBuilder.Entity("AkademisyenProfil.Models.Akademisyenler", b =>
                {
                    b.HasOne("AkademisyenProfil.Models.Bolumler", "Bolumler")
                        .WithMany()
                        .HasForeignKey("bolumno")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bolumler");
                });

            modelBuilder.Entity("AkademisyenProfil.Models.Bildiriler", b =>
                {
                    b.HasOne("AkademisyenProfil.Models.Akademisyenler", "Akademisyenler")
                        .WithMany()
                        .HasForeignKey("akano")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Akademisyenler");
                });

            modelBuilder.Entity("AkademisyenProfil.Models.Bolumler", b =>
                {
                    b.HasOne("AkademisyenProfil.Models.Fakulteler", "Fakulteler")
                        .WithMany()
                        .HasForeignKey("fakulteno")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fakulteler");
                });

            modelBuilder.Entity("AkademisyenProfil.Models.Gorevler", b =>
                {
                    b.HasOne("AkademisyenProfil.Models.Akademisyenler", "Akademisyenler")
                        .WithMany()
                        .HasForeignKey("akano")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Akademisyenler");
                });

            modelBuilder.Entity("AkademisyenProfil.Models.Hakemlikler", b =>
                {
                    b.HasOne("AkademisyenProfil.Models.Akademisyenler", "Akademisyenler")
                        .WithMany()
                        .HasForeignKey("akano")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Akademisyenler");
                });

            modelBuilder.Entity("AkademisyenProfil.Models.Kitaplar", b =>
                {
                    b.HasOne("AkademisyenProfil.Models.Akademisyenler", "Akademisyenler")
                        .WithMany()
                        .HasForeignKey("akano")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Akademisyenler");
                });

            modelBuilder.Entity("AkademisyenProfil.Models.Makaleler", b =>
                {
                    b.HasOne("AkademisyenProfil.Models.Akademisyenler", "Akademisyenler")
                        .WithMany()
                        .HasForeignKey("akano")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Akademisyenler");
                });

            modelBuilder.Entity("AkademisyenProfil.Models.Oduller", b =>
                {
                    b.HasOne("AkademisyenProfil.Models.Akademisyenler", "Akademisyenler")
                        .WithMany()
                        .HasForeignKey("akano")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Akademisyenler");
                });

            modelBuilder.Entity("AkademisyenProfil.Models.Ogrenimbilgiler", b =>
                {
                    b.HasOne("AkademisyenProfil.Models.Akademisyenler", "Akademisyenler")
                        .WithMany()
                        .HasForeignKey("akano")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Akademisyenler");
                });

            modelBuilder.Entity("AkademisyenProfil.Models.Projeler", b =>
                {
                    b.HasOne("AkademisyenProfil.Models.Akademisyenler", "Akademisyenler")
                        .WithMany()
                        .HasForeignKey("akano")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Akademisyenler");
                });

            modelBuilder.Entity("AkademisyenProfil.Models.Sertifikalar", b =>
                {
                    b.HasOne("AkademisyenProfil.Models.Akademisyenler", "Akademisyenler")
                        .WithMany()
                        .HasForeignKey("akano")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Akademisyenler");
                });
#pragma warning restore 612, 618
        }
    }
}
